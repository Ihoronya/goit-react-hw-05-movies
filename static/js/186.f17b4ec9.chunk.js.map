{"version":3,"file":"static/js/186.f17b4ec9.chunk.js","mappings":"+NA0DA,UArDgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWH,GACRI,MAAK,SAAAC,GAAG,OAAIN,EAAWM,EAAf,IACRC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACP,KAGF,SAAC,IAAD,UACsB,IAAnBF,EAAQY,QACP,SAAC,IAAD,CACEC,WAAW,sCACXC,OAAO,OACPC,SAAU,CAAC,KAAM,KAAM,MACvBC,WAAY,CAAC,IAAK,IAAK,KACvBC,aAAa,OACbC,UAAU,OANZ,wDAWA,SAAC,KAAD,CAAKC,GAAG,KAAKC,EAAG,CAAC,GAAI,KAAM,IAA3B,SACGpB,EAAQqB,KAAI,SAAAC,GAAM,OACjB,2BACE,UAAC,IAAD,CACET,WAAW,kCACXC,OAAO,OACPC,SAAU,CAAC,GAAI,GAAI,IACnBC,WAAY,CAAC,IAAK,KAAM,KACxBO,cAAe,CAAC,IAAK,KAAM,KAC3BL,UAAW,CAAC,GAAI,KAAM,IANxB,qBAQWI,EAAOE,WAElB,SAAC,IAAD,CACET,SAAU,CAAC,GAAI,KAAM,IACrBC,WAAW,MACXS,GAAI,CAAC,GAAI,KAAM,IAHjB,SAKGH,EAAOI,YAhBHJ,EAAOK,GADC,OAyB5B,C,mMCtDKC,EAAM,gCACNC,EAAM,mCAECC,EAAgB,mCAAG,6GAELC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,wCACiBC,IAHZ,cAEtBG,EAFsB,yBAMrBA,EAASC,MANY,gCAQ5BvB,QAAQC,IAAR,MAR4B,yDAAH,qDAYhBuB,EAAe,mCAAG,WAAMP,GAAN,gGAEJI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACND,EADM,oBACQE,EADR,oBAFI,cAErBG,EAFqB,yBAMpBA,EAASC,MANW,gCAQ3BvB,QAAQC,IAAR,MAR2B,yDAAH,sDAYfwB,EAAO,mCAAG,WAAMR,GAAN,gGAEII,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACND,EADM,4BACgBE,EADhB,oBAFJ,cAEbG,EAFa,yBAMZA,EAASC,KAAKG,MANF,gCAQnB1B,QAAQC,IAAR,MARmB,yDAAH,sDAYPN,EAAU,mCAAG,WAAMsB,GAAN,gGAECI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACND,EADM,4BACgBE,EADhB,oBAFD,cAEhBG,EAFgB,yBAKfA,EAASC,KAAKI,SALC,gCAOtB3B,QAAQC,IAAR,MAPsB,yDAAH,sDAWV2B,EAAgB,mCAAG,WAAMC,GAAN,kFACjBR,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,gBAAuB,CACvCY,OAAQ,CACNC,QAASZ,EACTU,MAAOA,KAERjC,MAAK,SAAA0B,GAAQ,OAAIA,EAASC,IAAb,IANc,mFAAH,qD,0KCzCzBS,GAAYC,EAAAA,EAAAA,IAAW,SAAoBC,EAAOC,GAClD,IAAF,GAA8CC,EAAAA,EAAAA,IAAiBF,GAAvDG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,cAAkBC,GAArC,YACMC,GAASC,EAAAA,EAAAA,IAAe,YAAaP,GAC3C,OAAuBQ,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,KADwB,gBAGtBR,IAAAA,EACAE,WAAWO,EAAAA,EAAAA,IAAG,mBAAoBP,IAC/BE,GALmB,IAMtBM,OAAK,kBACAL,GACAF,GAAiB,CAClBQ,QAAS,OACTC,cAAe,SACf,WAAY,aAKrB,IACDf,EAAU,YAAc,W,kJCvBpBe,GAAMJ,EAAAA,EAAAA,GAAO,OACjBI,EAAIC,YAAc,MAClB,IAAIhB,GAASC,EAAAA,EAAAA,IAAW,SAAiBgB,EAAOd,GAC9C,IAAQE,EAAwCY,EAAxCZ,KAAR,EAAgDY,EAAlCX,cAAAA,OAAd,SAAuCY,GAAvC,OAAgDD,EAAhD,GACMH,EAASR,EAAgB,CAAEa,QAAS,OAAQC,WAAY,SAAUZ,eAAgB,UAAa,GACrG,OAAuBa,EAAAA,EAAAA,KACrBN,GADwB,QAGtBZ,IAAAA,EACAmB,QAASjB,EACTkB,OAAK,kBACAT,GADA,IAEHU,WAAY,EACZC,SAAU,KAETP,GAGR,IACDlB,EAAOgB,YAAc,UACRf,EAAAA,EAAAA,IAAW,SAAiBgB,EAAOd,GAC9C,IAAQE,EAAkBY,EAAlBZ,KAASa,GAAjB,OAA0BD,EAA1B,GACA,OAAuBI,EAAAA,EAAAA,KAAIrB,GAAD,QAAWK,KAAAA,EAAMF,IAAAA,EAAK,aAAc,UAAae,GAC5E,IACMF,YAAc,Q","sources":["components/Reviews/Reviews.jsx","services/apiService.js","../node_modules/@chakra-ui/layout/src/container.tsx","../node_modules/@chakra-ui/layout/src/box.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/apiService';\nimport { Box, Container, Text } from '@chakra-ui/react';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviews(movieId)\n      .then(res => setReviews(res))\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  return (\n    <Container>\n      {reviews.length === 0 ? (\n        <Text\n          bgGradient=\"linear(to-br, brand.500, brand.300)\"\n          bgClip=\"text\"\n          fontSize={['16', '24', '24']}\n          fontWeight={[400, 500, 700]}\n          marginBottom=\"10px\"\n          marginTop=\"10px\"\n        >\n          We don't have any reviews for this movie.\n        </Text>\n      ) : (\n        <Box as=\"ul\" p={[15, null, 30]}>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <Text\n                bgGradient=\"linear(to-br, #2a2f75, #7b2e8f)\"\n                bgClip=\"text\"\n                fontSize={[16, 23, 26]}\n                fontWeight={[400, null, 600]}\n                letterSpacing={[1.1, null, 1.3]}\n                marginTop={[12, null, 26]}\n              >\n                Author: {review.author}\n              </Text>\n              <Text\n                fontSize={[15, null, 20]}\n                fontWeight=\"400\"\n                pt={[10, null, 20]}\n              >\n                {review.content}\n              </Text>\n            </li>\n          ))}\n        </Box>\n      )}\n    </Container>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'de618762d41dca44888c41e4f72c3f8e';\n\nexport const getTrendingFilms = async () => {\n  try {\n    const response = await axios.get(\n      `${URL}/trending/movie/week?api_key=${KEY}`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFullInfoById = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFilmsBySearch = async query => {\n  return await axios(`${URL}search/movie`, {\n    params: {\n      api_key: KEY,\n      query: query,\n    },\n  }).then(response => response.data);\n};","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface ContainerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Container\"> {\n  /**\n   * If `true`, container will center its children\n   * regardless of their width.\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n *\n * @see Docs https://chakra-ui.com/docs/components/container\n */\nexport const Container = forwardRef<ContainerProps, \"div\">(function Container(\n  props,\n  ref,\n) {\n  const { className, centerContent, ...rest } = omitThemingProps(props)\n\n  const styles = useStyleConfig(\"Container\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-container\", className)}\n      {...rest}\n      __css={{\n        ...styles,\n        ...(centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }),\n      }}\n    />\n  )\n})\n\nContainer.displayName = \"Container\"\n","import {\n  chakra,\n  forwardRef,\n  SystemStyleObject,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface BoxProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * Box is the most abstract component on top of which other chakra\n * components are built. It renders a `div` element by default.\n *\n * @see Docs https://chakra-ui.com/box\n */\nexport const Box = chakra(\"div\")\n\nBox.displayName = \"Box\"\n\n/**\n * As a constraint, you can't pass size related props\n * Only `size` would be allowed\n */\ntype Omitted = \"size\" | \"boxSize\" | \"width\" | \"height\" | \"w\" | \"h\"\n\nexport interface SquareProps extends Omit<BoxProps, Omitted> {\n  /**\n   * The size (width and height) of the square\n   */\n  size?: BoxProps[\"width\"]\n  /**\n   * If `true`, the content will be centered in the square\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\nexport const Square = forwardRef<SquareProps, \"div\">(function Square(\n  props,\n  ref,\n) {\n  const { size, centerContent = true, ...rest } = props\n\n  const styles: SystemStyleObject = centerContent\n    ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }\n    : {}\n\n  return (\n    <Box\n      ref={ref}\n      boxSize={size}\n      __css={{\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0,\n      }}\n      {...rest}\n    />\n  )\n})\n\nSquare.displayName = \"Square\"\n\nexport const Circle = forwardRef<SquareProps, \"div\">(function Circle(\n  props,\n  ref,\n) {\n  const { size, ...rest } = props\n  return <Square size={size} ref={ref} borderRadius=\"9999px\" {...rest} />\n})\n\nCircle.displayName = \"Circle\"\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","then","res","catch","err","console","log","length","bgGradient","bgClip","fontSize","fontWeight","marginBottom","marginTop","as","p","map","review","letterSpacing","author","pt","content","id","URL","KEY","getTrendingFilms","axios","response","data","getFullInfoById","getCast","cast","results","getFilmsBySearch","query","params","api_key","props","forwardRef","className","centerContent","omitThemingProps","rest","styles","div","__css","useStyleConfig","Container","chakra","cx","flexDirection","alignItems","displayName","Square","size","display","justifyContent","boxSize","Box","flexShrink","flexGrow","Circle","borderRadius"],"sourceRoot":""}