{"version":3,"file":"static/js/879.6e6de0d3.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/AdditionalInfoNav/AdditionalInfoNav.jsx","components/MovieDetails/MovieDetails.jsx","pages/MovieDetails.jsx","services/apiService.js","../node_modules/@chakra-ui/button/src/button-context.ts","../node_modules/@chakra-ui/button/src/button-icon.tsx","../node_modules/@chakra-ui/button/src/button-spinner.tsx","../node_modules/@chakra-ui/button/src/button.tsx","../node_modules/@chakra-ui/button/src/use-button-type.tsx","../node_modules/@chakra-ui/layout/src/container.tsx","../node_modules/@chakra-ui/react-use-merge-refs/src/index.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"gooey\":\"Loader_gooey__33+Wh\",\"dot\":\"Loader_dot__7Nm3P\",\"dots\":\"Loader_dots__0UTNN\"};","import s from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={s.gooey}>\n      <span className={s.dot}></span>\n      <div className={s.dots}>\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;","import { NavLink } from 'react-router-dom';\nimport { Container, Text } from '@chakra-ui/react';\n\nconst navItems = [\n  { href: 'cast', text: ' Cast' },\n  { href: 'reviews', text: 'Reviews' },\n];\n\nconst AdditionalInfoNav = () => {\n  return (\n    <Container maxW=\"container.lg\">\n      <Text\n        bgGradient=\"linear(to-br, brand.100, brand.200)\"\n        bgClip=\"text\"\n        fontSize={['18', '26', '32']}\n        fontWeight=\"extrabold\"\n        marginBottom=\"10px\"\n        marginTop=\"10px\"\n      >\n        Additional information\n      </Text>\n      {navItems.map(({ text, href }) => (\n        <NavLink\n          key={href}\n          to={href}\n          style={({ isActive }) => {\n            return {\n              color: isActive ? '#a497b4' : '#7b2e8f',\n            };\n          }}\n        >\n          <Text\n            fontSize={[16, 23, 26]}\n            fontWeight={[400, null, 600]}\n            letterSpacing={[1.1, null, 1.3]}\n          >\n            {text}\n          </Text>\n        </NavLink>\n      ))}\n    </Container>\n  );\n};\n\nexport default AdditionalInfoNav;","import PropTypes from 'prop-types';\nimport {} from 'react-router-dom';\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardBody,\n  Container,\n  Image,\n  SimpleGrid,\n  Stack,\n  Text,\n} from '@chakra-ui/react';\n\nconst MovieDetails = ({ movie }) => {\n  // const location = useLocation();\n  // const backLink = useRef(location.state?.from ?? '/');\n\n  const handleGoBack = () => {\n    window.history.back();\n  };\n\n  return (\n    <>\n      {movie.length !== 0 && (\n        <Container maxW=\"container.lg\">\n          <Button\n            variant=\"ghost\"\n            color=\"brand.200\"\n            fontSize={[15, 20, 20]}\n            type=\"button\"\n            mb=\"2px\"\n            _hover={{\n              shadow: '1px 1px 15px 1px ',\n              bg: '#FFE4C4',\n              color: 'brand.100',\n              border: '1px solid brand.100',\n            }}\n            onClick={handleGoBack}\n          >\n            Go back\n          </Button>\n          <Card\n            direction={{ base: 'column', sm: 'row' }}\n            overflow=\"hidden\"\n            variant=\"outline\"\n            mt={2}\n          >\n            {movie.poster_path && (\n              <Image\n                objectFit=\"cover\"\n                maxW={{ base: '100%', sm: '250px' }}\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                alt={movie.title}\n              />\n            )}\n            <Stack>\n              <CardBody>\n                <Text\n                  bgGradient=\"linear(to-br, brand.100, brand.200)\"\n                  bgClip=\"text\"\n                  fontSize={['18', '26', '32']}\n                  fontWeight=\"extrabold\"\n                >\n                  {movie.title}\n                </Text>\n                <Text py=\"2\">\n                  User Score: {Math.round(movie.vote_average) * 10}%\n                </Text>\n                <Text\n                  bgGradient=\"linear(to-br, brand.100, brand.200)\"\n                  bgClip=\"text\"\n                  fontSize={['18', '26', '32']}\n                  fontWeight=\"extrabold\"\n                >\n                  Overview:\n                </Text>\n                <Text py=\"2\">{movie.overview}</Text>\n                <Box>\n                  <Text\n                    bgGradient=\"linear(to-br, brand.100, brand.200)\"\n                    bgClip=\"text\"\n                    fontSize={['18', '26', '32']}\n                    fontWeight=\"extrabold\"\n                  >\n                    Genres:{' '}\n                  </Text>\n                  <SimpleGrid\n                    columns={[1, 2, 4, 4]}\n                    spacing={[4, null, 6]}\n                    py=\"4\"\n                  >\n                    {movie.genres &&\n                      movie.genres.map(genre => (\n                        <Stack key={genre.id}>\n                          <Text size=\"ls\">{genre.name}</Text>\n                        </Stack>\n                      ))}\n                  </SimpleGrid>\n                </Box>\n              </CardBody>\n            </Stack>\n          </Card>\n        </Container>\n      )}\n    </>\n  );\n};\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    overview: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n\nexport default MovieDetails;\n","import AdditionalInfoNav from 'components/AdditionalInfoNav/AdditionalInfoNav';\nimport { Suspense, useEffect, useState } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\nimport { getFullInfoById } from '../services/apiService';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetailsInfo = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  console.log(movie);\n  useEffect(() => {\n    getFullInfoById(movieId)\n      .then(setMovie)\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && <MovieDetails movie={movie} />}\n      <AdditionalInfoNav />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetailsInfo;","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'de618762d41dca44888c41e4f72c3f8e';\n\nexport const getTrendingFilms = async () => {\n  try {\n    const response = await axios.get(\n      `${URL}/trending/movie/week?api_key=${KEY}`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFullInfoById = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFilmsBySearch = async query => {\n  return await axios(`${URL}search/movie`, {\n    params: {\n      api_key: KEY,\n      query: query,\n    },\n  }).then(response => response.data);\n};","import { createContext } from \"@chakra-ui/react-context\"\nimport { ThemingProps } from \"@chakra-ui/system\"\n\nexport interface ButtonGroupContext extends ThemingProps<\"Button\"> {\n  /**\n   * @default false\n   */\n  isDisabled?: boolean\n}\n\nexport const [ButtonGroupProvider, useButtonGroup] =\n  createContext<ButtonGroupContext>({\n    strict: false,\n    name: \"ButtonGroupContext\",\n  })\n","import { chakra, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { cloneElement, isValidElement } from \"react\"\n\nexport function ButtonIcon(props: HTMLChakraProps<\"span\">) {\n  const { children, className, ...rest } = props\n\n  const _children = isValidElement(children)\n    ? cloneElement<any>(children, {\n        \"aria-hidden\": true,\n        focusable: false,\n      })\n    : children\n\n  const _className = cx(\"chakra-button__icon\", className)\n\n  return (\n    <chakra.span\n      display=\"inline-flex\"\n      alignSelf=\"center\"\n      flexShrink={0}\n      {...rest}\n      className={_className}\n    >\n      {_children}\n    </chakra.span>\n  )\n}\n\nButtonIcon.displayName = \"ButtonIcon\"\n","import { Spinner } from \"@chakra-ui/spinner\"\nimport { chakra, HTMLChakraProps, SystemStyleObject } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useMemo } from \"react\"\nimport { ButtonSpinnerOptions } from \"./button-types\"\n\ninterface ButtonSpinnerProps\n  extends HTMLChakraProps<\"div\">,\n    ButtonSpinnerOptions {}\n\nexport function ButtonSpinner(props: ButtonSpinnerProps) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = <Spinner color=\"currentColor\" width=\"1em\" height=\"1em\" />,\n    className,\n    __css,\n    ...rest\n  } = props\n\n  const _className = cx(\"chakra-button__spinner\", className)\n\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\"\n\n  const spinnerStyles: SystemStyleObject = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css,\n    }),\n    [__css, label, marginProp, spacing],\n  )\n\n  return (\n    <chakra.div className={_className} {...rest} __css={spinnerStyles}>\n      {children}\n    </chakra.div>\n  )\n}\nButtonSpinner.displayName = \"ButtonSpinner\"\n","import { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\"\n\nimport { useMemo } from \"react\"\nimport { useButtonGroup } from \"./button-context\"\nimport { ButtonIcon } from \"./button-icon\"\nimport { ButtonSpinner } from \"./button-spinner\"\nimport { ButtonOptions } from \"./button-types\"\nimport { useButtonType } from \"./use-button-type\"\n\nexport interface ButtonProps\n  extends HTMLChakraProps<\"button\">,\n    ButtonOptions,\n    ThemingProps<\"Button\"> {}\n\n/**\n * Button component is used to trigger an action or event, such as submitting a form, opening a Dialog, canceling an action, or performing a delete operation.\n *\n * @see Docs https://chakra-ui.com/docs/components/button\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/button/\n */\nexport const Button = forwardRef<ButtonProps, \"button\">((props, ref) => {\n  const group = useButtonGroup()\n  const styles = useStyleConfig(\"Button\", { ...group, ...props })\n\n  const {\n    isDisabled = group?.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props)\n\n  /**\n   * When button is used within ButtonGroup (i.e. flushed with sibling buttons),\n   * it is important to add a `zIndex` on focus.\n   *\n   * So let's read the component styles and then add `zIndex` to it.\n   */\n  const buttonStyles: SystemStyleObject = useMemo(() => {\n    // @ts-ignore\n    const _focus = { ...styles?.[\"_focus\"], zIndex: 1 }\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...(!!group && { _focus }),\n    }\n  }, [styles, group])\n\n  const { ref: _ref, type: defaultType } = useButtonType(as)\n\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children }\n\n  return (\n    <chakra.button\n      ref={useMergeRefs(ref, _ref)}\n      as={as}\n      type={type ?? defaultType}\n      data-active={dataAttr(isActive)}\n      data-loading={dataAttr(isLoading)}\n      __css={buttonStyles}\n      className={cx(\"chakra-button\", className)}\n      {...rest}\n      disabled={isDisabled || isLoading}\n    >\n      {isLoading && spinnerPlacement === \"start\" && (\n        <ButtonSpinner\n          className=\"chakra-button__spinner--start\"\n          label={loadingText}\n          placement=\"start\"\n          spacing={iconSpacing}\n        >\n          {spinner}\n        </ButtonSpinner>\n      )}\n\n      {isLoading ? (\n        loadingText || (\n          <chakra.span opacity={0}>\n            <ButtonContent {...contentProps} />\n          </chakra.span>\n        )\n      ) : (\n        <ButtonContent {...contentProps} />\n      )}\n\n      {isLoading && spinnerPlacement === \"end\" && (\n        <ButtonSpinner\n          className=\"chakra-button__spinner--end\"\n          label={loadingText}\n          placement=\"end\"\n          spacing={iconSpacing}\n        >\n          {spinner}\n        </ButtonSpinner>\n      )}\n    </chakra.button>\n  )\n})\n\nButton.displayName = \"Button\"\n\ntype ButtonContentProps = Pick<\n  ButtonProps,\n  \"leftIcon\" | \"rightIcon\" | \"children\" | \"iconSpacing\"\n>\n\nfunction ButtonContent(props: ButtonContentProps) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props\n  return (\n    <>\n      {leftIcon && <ButtonIcon marginEnd={iconSpacing}>{leftIcon}</ButtonIcon>}\n      {children}\n      {rightIcon && (\n        <ButtonIcon marginStart={iconSpacing}>{rightIcon}</ButtonIcon>\n      )}\n    </>\n  )\n}\n","import { useCallback, useState } from \"react\"\n\nexport function useButtonType(value?: React.ElementType) {\n  const [isButton, setIsButton] = useState(!value)\n  const refCallback = useCallback((node: HTMLElement | null) => {\n    if (!node) return\n    setIsButton(node.tagName === \"BUTTON\")\n  }, [])\n  const type = isButton ? \"button\" : undefined\n  return { ref: refCallback, type } as const\n}\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface ContainerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Container\"> {\n  /**\n   * If `true`, container will center its children\n   * regardless of their width.\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n *\n * @see Docs https://chakra-ui.com/docs/components/container\n */\nexport const Container = forwardRef<ContainerProps, \"div\">(function Container(\n  props,\n  ref,\n) {\n  const { className, centerContent, ...rest } = omitThemingProps(props)\n\n  const styles = useStyleConfig(\"Container\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-container\", className)}\n      {...rest}\n      __css={{\n        ...styles,\n        ...(centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }),\n      }}\n    />\n  )\n})\n\nContainer.displayName = \"Container\"\n","import { useMemo } from \"react\"\n\nexport type ReactRef<T> = React.RefCallback<T> | React.MutableRefObject<T>\n\nexport function assignRef<T = any>(\n  ref: ReactRef<T> | null | undefined,\n  value: T,\n) {\n  if (ref == null) return\n\n  if (typeof ref === \"function\") {\n    ref(value)\n    return\n  }\n\n  try {\n    ref.current = value\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`)\n  }\n}\n\nexport function mergeRefs<T>(...refs: (ReactRef<T> | null | undefined)[]) {\n  return (node: T | null) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node)\n    })\n  }\n}\n\nexport function useMergeRefs<T>(...refs: (ReactRef<T> | null | undefined)[]) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useMemo(() => mergeRefs(...refs), refs)\n}\n"],"names":["className","s","navItems","href","text","maxW","bgGradient","bgClip","fontSize","fontWeight","marginBottom","marginTop","map","to","style","color","isActive","letterSpacing","movie","length","variant","type","mb","_hover","shadow","bg","border","onClick","window","history","back","direction","base","sm","overflow","mt","poster_path","objectFit","src","alt","title","py","Math","round","vote_average","overview","columns","spacing","genres","genre","size","name","id","movieId","useParams","useState","setMovie","console","log","useEffect","getFullInfoById","then","catch","err","Suspense","fallback","Loader","URL","KEY","getTrendingFilms","axios","response","data","getCast","cast","getReviews","results","getFilmsBySearch","query","params","api_key","createContext","strict","useButtonGroup","props","children","rest","_children","focusable","isValidElement","cloneElement","_className","span","cx","ButtonIcon","chakra","alignSelf","flexShrink","displayName","label","placement","ButtonSpinner","Spinner","width","height","__css","marginProp","spinnerStyles","display","useMemo","alignItems","position","div","styles","dataAttr","isDisabled","isLoading","Fragment","leftIcon","rightIcon","loadingText","iconSpacing","spinner","spinnerPlacement","as","buttonStyles","_focus","zIndex","appearance","justifyContent","userSelect","whiteSpace","verticalAlign","outline","useButtonType","_ref","defaultType","contentProps","value","isButton","setIsButton","ref","useCallback","node","tagName","useMergeRefs","button","disabled","useStyleConfig","Button","jsx","group","omitThemingProps","opacity","forwardRef","marginStart","marginEnd","centerContent","Container","flexDirection","assignRef","current","error","Error","mergeRefs","refs","forEach"],"sourceRoot":""}